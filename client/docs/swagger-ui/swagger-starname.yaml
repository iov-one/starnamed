swagger: '2.0'
info:
  title: Starname - Legacy REST and gRPC Gateway docs
  description: 'A REST interface for state queries, legacy transactions'
  version: 1.0.0
paths:
  /starname/v1beta1/configuration/fees:
    get:
      summary: Fees gets starname product fees.
      operationId: Fees
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              fees:
                description: Fees is the starname product fee object.
                type: object
                properties:
                  fee_coin_denom:
                    type: string
                    title: >-
                      FeeCoinDenom defines the denominator of the coin used to
                      process fees
                  fee_coin_price:
                    type: string
                    title: FeeCoinPrice defines the price of the coin
                  fee_default:
                    type: string
                    title: FeeDefault is the parameter defining the default fee
                  register_account_closed:
                    type: string
                    title: >-
                      RegisterAccountClosed is the fee to be paid to register an
                      account in a closed domain
                  register_account_open:
                    type: string
                    title: >-
                      RegisterAccountOpen is the fee to be paid to register an
                      account in an open domain
                  transfer_account_closed:
                    type: string
                    title: >-
                      TransferAccountClosed is the fee to be paid to register an
                      account in a closed domain
                  transfer_account_open:
                    type: string
                    title: >-
                      TransferAccountOpen is the fee to be paid to register an
                      account in an open domain
                  replace_account_resources:
                    type: string
                    title: >-
                      ReplaceAccountResources is the fee to be paid to replace
                      account's resources
                  add_account_certificate:
                    type: string
                    title: >-
                      AddAccountCertificate is the fee to be paid to add a
                      certificate to an account
                  del_account_certificate:
                    type: string
                    title: >-
                      DelAccountCertificate is the feed to be paid to delete a
                      certificate in an account
                  set_account_metadata:
                    type: string
                    title: >-
                      SetAccountMetadata is the fee to be paid to set account's
                      metadata
                  register_domain_1:
                    type: string
                    title: >-
                      RegisterDomain1 is the fee to be paid to register a domain
                      with one character
                  register_domain_2:
                    type: string
                    title: >-
                      RegisterDomain2 is the fee to be paid to register a domain
                      with two characters
                  register_domain_3:
                    type: string
                    title: >-
                      RegisterDomain3 is the fee to be paid to register a domain
                      with three characters
                  register_domain_4:
                    type: string
                    title: >-
                      RegisterDomain4 is the fee to be paid to register a domain
                      with four characters
                  register_domain_5:
                    type: string
                    title: >-
                      RegisterDomain5 is the fee to be paid to register a domain
                      with five characters
                  register_domain_default:
                    type: string
                    title: >-
                      RegisterDomainDefault is the fee to be paid to register a
                      domain with more than five characters
                  register_open_domain_multiplier:
                    type: string
                    title: >-
                      register_open_domain_multiplier is the multiplication
                      applied to fees in register domain operations if they're
                      of open type
                  transfer_domain_closed:
                    type: string
                    title: >-
                      transfer_domain_closed is the fee to be paid to transfer a
                      closed domain
                  transfer_domain_open:
                    type: string
                    title: >-
                      transfer_domain_open is the fee to be paid to transfer
                      open domains
                  renew_domain_open:
                    type: string
                    title: >-
                      renew_domain_open is the fee to be paid to renew an open
                      domain
                  create_escrow:
                    type: string
                    title: create_escrow is the fee to be paid to create an escrow
                  update_escrow:
                    type: string
                    title: update_escrow is the fee to be paid to update an escrow
                  transfer_to_escrow:
                    type: string
                    title: >-
                      transfer_to_escrow is the fee to be paid to transfer coins
                      to an escrow
                  refund_escrow:
                    type: string
                    title: >-
                      refund_escrow is the fee to be paid to refund the account
                      or domain placed in an escrow
                title: >-
                  Fees contains different type of fees to calculate coins to
                  detract when processing different messages
            title: >-
              QueryFeesResponse is the response type for the Query/Fees RPC
              method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /starname/v1beta1/configuration/params:
    get:
      summary: Config gets starname configuration.
      operationId: Config
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              config:
                description: Configuration is the starname configuration.
                type: object
                properties:
                  configurer:
                    type: string
                    title: >-
                      Configurer is the configuration owner, the addresses
                      allowed to handle fees and register domains with no
                      superuser
                  valid_domain_name:
                    type: string
                    title: >-
                      ValidDomainName defines a regexp that determines if a
                      domain name is valid or not
                  valid_account_name:
                    type: string
                    title: >-
                      ValidAccountName defines a regexp that determines if an
                      account name is valid or not
                  valid_uri:
                    type: string
                    title: >-
                      ValidURI defines a regexp that determines if resource uri
                      is valid or not
                  valid_resource:
                    type: string
                    title: ValidResource determines a regexp for a resource content
                  domain_renewal_period:
                    type: string
                    title: >-
                      DomainRenewalPeriod defines the duration of the domain
                      renewal period in seconds
                  domain_renewal_count_max:
                    type: integer
                    format: int64
                    title: >-
                      DomainRenewalCountMax defines maximum number of domain
                      renewals a user can do
                  domain_grace_period:
                    type: string
                    title: >-
                      DomainGracePeriod defines the grace period for a domain
                      deletion in seconds
                  account_renewal_period:
                    type: string
                    title: >-
                      AccountRenewalPeriod defines the duration of the account
                      renewal period in seconds
                  account_renewal_count_max:
                    type: integer
                    format: int64
                    title: >-
                      AccountRenewalCountMax defines maximum number of account
                      renewals a user can do
                  account_grace_period:
                    type: string
                    title: >-
                      DomainGracePeriod defines the grace period for a domain
                      deletion in seconds
                  resources_max:
                    type: integer
                    format: int64
                    title: >-
                      ResourcesMax defines maximum number of resources could be
                      saved under an account
                  certificate_size_max:
                    type: string
                    format: uint64
                    title: >-
                      CertificateSizeMax defines maximum size of a certificate
                      that could be saved under an account
                  certificate_count_max:
                    type: integer
                    format: int64
                    title: >-
                      CertificateCountMax defines maximum number of certificates
                      that could be saved under an account
                  metadata_size_max:
                    type: string
                    format: uint64
                    title: >-
                      MetadataSizeMax defines maximum size of metadata that
                      could be saved under an account
                  escrow_broker:
                    type: string
                    title: >-
                      EscrowBroker defines an address that will receive a
                      commission for completed escrows
                  escrow_commission:
                    type: string
                    title: >-
                      EscrowCommission defines the commission taken by the
                      broker for a completed escrow, between 0 (no commission)
                      and

                      1 (100% commission)
                  escrow_max_period:
                    type: string
                    title: >-
                      EscrowPeriod defines the maximum duration of an escrow in
                      seconds
                title: Config is the configuration of the network
            description: >-
              QueryConfigResponse is the response type for the
              Query/Configuration RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  '/starnamed/x/escrow/{id}':
    get:
      summary: Escrow queries the escrow by the specified id
      operationId: Escrow
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              escrow:
                type: object
                properties:
                  id:
                    type: string
                  seller:
                    type: string
                  object:
                    type: object
                    properties:
                      type_url:
                        type: string
                        description: >-
                          A URL/resource name that uniquely identifies the type
                          of the serialized

                          protocol buffer message. This string must contain at
                          least

                          one "/" character. The last segment of the URL's path
                          must represent

                          the fully qualified name of the type (as in

                          `path/google.protobuf.Duration`). The name should be
                          in a canonical form

                          (e.g., leading "." is not accepted).


                          In practice, teams usually precompile into the binary
                          all types that they

                          expect it to use in the context of Any. However, for
                          URLs which use the

                          scheme `http`, `https`, or no scheme, one can
                          optionally set up a type

                          server that maps type URLs to message definitions as
                          follows:


                          * If no scheme is provided, `https` is assumed.

                          * An HTTP GET on the URL must yield a
                          [google.protobuf.Type][]
                            value in binary format, or produce an error.
                          * Applications are allowed to cache lookup results
                          based on the
                            URL, or have them precompiled into a binary to avoid any
                            lookup. Therefore, binary compatibility needs to be preserved
                            on changes to types. (Use versioned type names to manage
                            breaking changes.)

                          Note: this functionality is not currently available in
                          the official

                          protobuf release, and it is not used for type URLs
                          beginning with

                          type.googleapis.com.


                          Schemes other than `http`, `https` (or the empty
                          scheme) might be

                          used with implementation specific semantics.
                      value:
                        type: string
                        format: byte
                        description: >-
                          Must be a valid serialized protocol buffer of the
                          above specified type.
                    description: >-
                      `Any` contains an arbitrary serialized protocol buffer
                      message along with a

                      URL that describes the type of the serialized message.


                      Protobuf library provides support to pack/unpack Any
                      values in the form

                      of utility functions or additional generated methods of
                      the Any type.


                      Example 1: Pack and unpack a message in C++.

                          Foo foo = ...;
                          Any any;
                          any.PackFrom(foo);
                          ...
                          if (any.UnpackTo(&foo)) {
                            ...
                          }

                      Example 2: Pack and unpack a message in Java.

                          Foo foo = ...;
                          Any any = Any.pack(foo);
                          ...
                          if (any.is(Foo.class)) {
                            foo = any.unpack(Foo.class);
                          }

                       Example 3: Pack and unpack a message in Python.

                          foo = Foo(...)
                          any = Any()
                          any.Pack(foo)
                          ...
                          if any.Is(Foo.DESCRIPTOR):
                            any.Unpack(foo)
                            ...

                       Example 4: Pack and unpack a message in Go

                           foo := &pb.Foo{...}
                           any, err := ptypes.MarshalAny(foo)
                           ...
                           foo := &pb.Foo{}
                           if err := ptypes.UnmarshalAny(any, foo); err != nil {
                             ...
                           }

                      The pack methods provided by protobuf library will by
                      default use

                      'type.googleapis.com/full.type.name' as the type URL and
                      the unpack

                      methods only use the fully qualified type name after the
                      last '/'

                      in the type URL, for example "foo.bar.com/x/y.z" will
                      yield type

                      name "y.z".



                      JSON

                      ====

                      The JSON representation of an `Any` value uses the regular

                      representation of the deserialized, embedded message, with
                      an

                      additional field `@type` which contains the type URL.
                      Example:

                          package google.profile;
                          message Person {
                            string first_name = 1;
                            string last_name = 2;
                          }

                          {
                            "@type": "type.googleapis.com/google.profile.Person",
                            "firstName": <string>,
                            "lastName": <string>
                          }

                      If the embedded message type is well-known and has a
                      custom JSON

                      representation, that representation will be embedded
                      adding a field

                      `value` which holds the custom JSON in addition to the
                      `@type`

                      field. Example (for message [google.protobuf.Duration][]):

                          {
                            "@type": "type.googleapis.com/google.protobuf.Duration",
                            "value": "1.212s"
                          }
                  price:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                    title: >-
                      TODO: refactor this to use sdk.Coin instead of sdk.Coins

                      Although the price contains multiple coins, for now we
                      enforce a specific denomination, so there will be only

                      one coin type in a valid escrow
                  state:
                    type: string
                    enum:
                      - ESCROW_STATE_OPEN
                      - ESCROW_STATE_COMPLETED
                      - ESCROW_STATE_REFUNDED
                      - ESCROW_STATE_EXPIRED
                    default: ESCROW_STATE_OPEN
                    description: >-
                      - ESCROW_STATE_OPEN: ESCROW_STATE_OPEN defines an open
                      state.
                       - ESCROW_STATE_COMPLETED: ESCROW_STATE_COMPLETED defines a completed state.
                       - ESCROW_STATE_REFUNDED: ESCROW_STATE_REFUNDED defines a refunded state.
                       - ESCROW_STATE_EXPIRED: ESCROW_STATE_REFUNDED defines an expired state.
                    title: EscrowState defines the state of an escrow
                  deadline:
                    type: string
                    format: uint64
                  broker_address:
                    type: string
                  broker_commission:
                    type: string
                title: Escrow defines the struct of an escrow
            title: >-
              QueryEscrowResponse is the response type for the Query/Escrow RPC
              method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: id
          in: path
          required: true
          type: string
      tags:
        - Query
  /starnamed/x/escrows:
    get:
      summary: Escrows queries escrows by the specified key-value pairs
      operationId: Escrows
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              escrows:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    seller:
                      type: string
                    object:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: >-
                            A URL/resource name that uniquely identifies the
                            type of the serialized

                            protocol buffer message. This string must contain at
                            least

                            one "/" character. The last segment of the URL's
                            path must represent

                            the fully qualified name of the type (as in

                            `path/google.protobuf.Duration`). The name should be
                            in a canonical form

                            (e.g., leading "." is not accepted).


                            In practice, teams usually precompile into the
                            binary all types that they

                            expect it to use in the context of Any. However, for
                            URLs which use the

                            scheme `http`, `https`, or no scheme, one can
                            optionally set up a type

                            server that maps type URLs to message definitions as
                            follows:


                            * If no scheme is provided, `https` is assumed.

                            * An HTTP GET on the URL must yield a
                            [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results
                            based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available
                            in the official

                            protobuf release, and it is not used for type URLs
                            beginning with

                            type.googleapis.com.


                            Schemes other than `http`, `https` (or the empty
                            scheme) might be

                            used with implementation specific semantics.
                        value:
                          type: string
                          format: byte
                          description: >-
                            Must be a valid serialized protocol buffer of the
                            above specified type.
                      description: >-
                        `Any` contains an arbitrary serialized protocol buffer
                        message along with a

                        URL that describes the type of the serialized message.


                        Protobuf library provides support to pack/unpack Any
                        values in the form

                        of utility functions or additional generated methods of
                        the Any type.


                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by
                        default use

                        'type.googleapis.com/full.type.name' as the type URL and
                        the unpack

                        methods only use the fully qualified type name after the
                        last '/'

                        in the type URL, for example "foo.bar.com/x/y.z" will
                        yield type

                        name "y.z".



                        JSON

                        ====

                        The JSON representation of an `Any` value uses the
                        regular

                        representation of the deserialized, embedded message,
                        with an

                        additional field `@type` which contains the type URL.
                        Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a
                        custom JSON

                        representation, that representation will be embedded
                        adding a field

                        `value` which holds the custom JSON in addition to the
                        `@type`

                        field. Example (for message
                        [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                    price:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: >-
                          Coin defines a token with a denomination and an
                          amount.


                          NOTE: The amount field is an Int which implements the
                          custom method

                          signatures required by gogoproto.
                      title: >-
                        TODO: refactor this to use sdk.Coin instead of sdk.Coins

                        Although the price contains multiple coins, for now we
                        enforce a specific denomination, so there will be only

                        one coin type in a valid escrow
                    state:
                      type: string
                      enum:
                        - ESCROW_STATE_OPEN
                        - ESCROW_STATE_COMPLETED
                        - ESCROW_STATE_REFUNDED
                        - ESCROW_STATE_EXPIRED
                      default: ESCROW_STATE_OPEN
                      description: >-
                        - ESCROW_STATE_OPEN: ESCROW_STATE_OPEN defines an open
                        state.
                         - ESCROW_STATE_COMPLETED: ESCROW_STATE_COMPLETED defines a completed state.
                         - ESCROW_STATE_REFUNDED: ESCROW_STATE_REFUNDED defines a refunded state.
                         - ESCROW_STATE_EXPIRED: ESCROW_STATE_REFUNDED defines an expired state.
                      title: EscrowState defines the state of an escrow
                    deadline:
                      type: string
                      format: uint64
                    broker_address:
                      type: string
                    broker_commission:
                      type: string
                  title: Escrow defines the struct of an escrow
            title: >-
              QueryEscrowsResponse is the response type for the Query/Escrows
              RPC method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: seller
          in: query
          required: false
          type: string
        - name: state
          in: query
          required: false
          type: string
        - name: object_key
          in: query
          required: false
          type: string
        - name: pagination_start
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination_length
          in: query
          required: false
          type: string
          format: uint64
      tags:
        - Query
  '/starname/v1beta1/account/{starname}':
    get:
      summary: Starname gets all the information associated with a starname.
      operationId: Starname
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              account:
                description: Account is the information associated with the starname.
                type: object
                properties:
                  domain:
                    type: string
                    title: Domain references the domain this account belongs to
                  name:
                    type: string
                    title: Name is the name of the account
                  owner:
                    type: string
                    format: byte
                    title: Owner is the address that owns the account
                  broker:
                    type: string
                    format: byte
                    title: >-
                      Broker identifies an entity that facilitated the
                      transaction of the account and can be empty
                  valid_until:
                    type: string
                    format: int64
                    title: >-
                      ValidUntil defines a unix timestamp of the expiration of
                      the account in seconds
                  resources:
                    type: array
                    items:
                      type: object
                      properties:
                        uri:
                          type: string
                          title: URI defines the ID of the resource
                        resource:
                          type: string
                          title: Resource is the resource
                      title: Resource defines a resource owned by an account
                    title: Resources is the list of resources an account resolves to
                  certificates:
                    type: array
                    items:
                      type: string
                      format: byte
                    title: >-
                      Certificates contains the list of certificates to identify
                      the account owner
                  metadata_uri:
                    type: string
                    title: >-
                      MetadataURI contains a link to extra information regarding
                      the account
                title: |-
                  Account defines an account that belongs to a domain
                  NOTE: It should not be confused with cosmos-sdk auth account
                  github.com/cosmos/cosmos-sdk/x/auth.Account
            description: >-
              QueryStarnameResponse is the response type for the Query/Starname
              RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: starname
          description: Starname is the of the form account*domain.
          in: path
          required: true
          type: string
      tags:
        - Query
  '/starname/v1beta1/accounts/broker/{broker}':
    get:
      summary: BrokerAccounts gets accounts associated with a given broker.
      operationId: BrokerAccounts
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              accounts:
                type: array
                items:
                  type: object
                  properties:
                    domain:
                      type: string
                      title: Domain references the domain this account belongs to
                    name:
                      type: string
                      title: Name is the name of the account
                    owner:
                      type: string
                      format: byte
                      title: Owner is the address that owns the account
                    broker:
                      type: string
                      format: byte
                      title: >-
                        Broker identifies an entity that facilitated the
                        transaction of the account and can be empty
                    valid_until:
                      type: string
                      format: int64
                      title: >-
                        ValidUntil defines a unix timestamp of the expiration of
                        the account in seconds
                    resources:
                      type: array
                      items:
                        type: object
                        properties:
                          uri:
                            type: string
                            title: URI defines the ID of the resource
                          resource:
                            type: string
                            title: Resource is the resource
                        title: Resource defines a resource owned by an account
                      title: >-
                        Resources is the list of resources an account resolves
                        to
                    certificates:
                      type: array
                      items:
                        type: string
                        format: byte
                      title: >-
                        Certificates contains the list of certificates to
                        identify the account owner
                    metadata_uri:
                      type: string
                      title: >-
                        MetadataURI contains a link to extra information
                        regarding the account
                  title: |-
                    Account defines an account that belongs to a domain
                    NOTE: It should not be confused with cosmos-sdk auth account
                    github.com/cosmos/cosmos-sdk/x/auth.Account
                description: Accounts is the accounts associated with broker.
              page:
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            description: >-
              QueryBrokerAccountsResponse is the response type for the
              Query/BrokerAccounts RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: broker
          description: Broker is the broker of accounts.
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
      tags:
        - Query
  '/starname/v1beta1/accounts/domain/{domain}':
    get:
      summary: DomainAccounts gets accounts associated with a given domain.
      operationId: DomainAccounts
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              accounts:
                type: array
                items:
                  type: object
                  properties:
                    domain:
                      type: string
                      title: Domain references the domain this account belongs to
                    name:
                      type: string
                      title: Name is the name of the account
                    owner:
                      type: string
                      format: byte
                      title: Owner is the address that owns the account
                    broker:
                      type: string
                      format: byte
                      title: >-
                        Broker identifies an entity that facilitated the
                        transaction of the account and can be empty
                    valid_until:
                      type: string
                      format: int64
                      title: >-
                        ValidUntil defines a unix timestamp of the expiration of
                        the account in seconds
                    resources:
                      type: array
                      items:
                        type: object
                        properties:
                          uri:
                            type: string
                            title: URI defines the ID of the resource
                          resource:
                            type: string
                            title: Resource is the resource
                        title: Resource defines a resource owned by an account
                      title: >-
                        Resources is the list of resources an account resolves
                        to
                    certificates:
                      type: array
                      items:
                        type: string
                        format: byte
                      title: >-
                        Certificates contains the list of certificates to
                        identify the account owner
                    metadata_uri:
                      type: string
                      title: >-
                        MetadataURI contains a link to extra information
                        regarding the account
                  title: |-
                    Account defines an account that belongs to a domain
                    NOTE: It should not be confused with cosmos-sdk auth account
                    github.com/cosmos/cosmos-sdk/x/auth.Account
                description: Accounts is the accounts associated with the domain.
              page:
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            description: >-
              QueryDomainAccountsResponse is the response type for the
              Query/DomainAccounts RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: domain
          description: Domain is the name of the domain.
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
      tags:
        - Query
  '/starname/v1beta1/accounts/owner/{owner}':
    get:
      summary: OwnerAccounts gets accounts associated with a given owner.
      operationId: OwnerAccounts
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              accounts:
                type: array
                items:
                  type: object
                  properties:
                    domain:
                      type: string
                      title: Domain references the domain this account belongs to
                    name:
                      type: string
                      title: Name is the name of the account
                    owner:
                      type: string
                      format: byte
                      title: Owner is the address that owns the account
                    broker:
                      type: string
                      format: byte
                      title: >-
                        Broker identifies an entity that facilitated the
                        transaction of the account and can be empty
                    valid_until:
                      type: string
                      format: int64
                      title: >-
                        ValidUntil defines a unix timestamp of the expiration of
                        the account in seconds
                    resources:
                      type: array
                      items:
                        type: object
                        properties:
                          uri:
                            type: string
                            title: URI defines the ID of the resource
                          resource:
                            type: string
                            title: Resource is the resource
                        title: Resource defines a resource owned by an account
                      title: >-
                        Resources is the list of resources an account resolves
                        to
                    certificates:
                      type: array
                      items:
                        type: string
                        format: byte
                      title: >-
                        Certificates contains the list of certificates to
                        identify the account owner
                    metadata_uri:
                      type: string
                      title: >-
                        MetadataURI contains a link to extra information
                        regarding the account
                  title: |-
                    Account defines an account that belongs to a domain
                    NOTE: It should not be confused with cosmos-sdk auth account
                    github.com/cosmos/cosmos-sdk/x/auth.Account
                description: Accounts is the accounts associated with owner.
              page:
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            description: >-
              QueryOwnerAccountsResponse is the response type for the
              Query/OwnerAccounts RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: owner
          description: Owner is the owner of accounts.
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
      tags:
        - Query
  '/starname/v1beta1/accounts/resource/{uri}/{resource}':
    get:
      summary: ResourceAccounts gets accounts associated with a given resource.
      operationId: ResourceAccounts
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              accounts:
                type: array
                items:
                  type: object
                  properties:
                    domain:
                      type: string
                      title: Domain references the domain this account belongs to
                    name:
                      type: string
                      title: Name is the name of the account
                    owner:
                      type: string
                      format: byte
                      title: Owner is the address that owns the account
                    broker:
                      type: string
                      format: byte
                      title: >-
                        Broker identifies an entity that facilitated the
                        transaction of the account and can be empty
                    valid_until:
                      type: string
                      format: int64
                      title: >-
                        ValidUntil defines a unix timestamp of the expiration of
                        the account in seconds
                    resources:
                      type: array
                      items:
                        type: object
                        properties:
                          uri:
                            type: string
                            title: URI defines the ID of the resource
                          resource:
                            type: string
                            title: Resource is the resource
                        title: Resource defines a resource owned by an account
                      title: >-
                        Resources is the list of resources an account resolves
                        to
                    certificates:
                      type: array
                      items:
                        type: string
                        format: byte
                      title: >-
                        Certificates contains the list of certificates to
                        identify the account owner
                    metadata_uri:
                      type: string
                      title: >-
                        MetadataURI contains a link to extra information
                        regarding the account
                  title: |-
                    Account defines an account that belongs to a domain
                    NOTE: It should not be confused with cosmos-sdk auth account
                    github.com/cosmos/cosmos-sdk/x/auth.Account
                description: Accounts are the accounts associated with the resource.
              page:
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            description: >-
              QueryResourceAccountsResponse is the response type for the
              Query/ResourceAccounts RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: uri
          description: >-
            Uri is the uri of the resource. query.pb.gw.to doesn't respect
            gogoproto.customname, so we're stuck with Uri.
          in: path
          required: true
          type: string
        - name: resource
          description: Resource is the resource of interest.
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
      tags:
        - Query
  '/starname/v1beta1/domain/{name}':
    get:
      summary: Domain gets a starname's domain info.
      operationId: Domain
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              domain:
                description: Domain is the information associated with the domain.
                type: object
                properties:
                  name:
                    type: string
                    title: Name is the name of the domain
                  admin:
                    type: string
                    format: byte
                    title: Admin is the owner of the domain
                  broker:
                    type: string
                    format: byte
                  valid_until:
                    type: string
                    format: int64
                    title: >-
                      ValidUntil is a unix timestamp defines the time when the
                      domain will become invalid in seconds
                  type:
                    type: string
                    title: Type defines the type of the domain
                title: Domain defines a domain
            description: >-
              QueryDomainResponse is the response type for the Query/Domain RPC
              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: name
          description: Name is the name of the domain.
          in: path
          required: true
          type: string
      tags:
        - Query
  '/starname/v1beta1/domains/broker/{broker}':
    get:
      summary: BrokerDomains gets domains associated with a given broker.
      operationId: BrokerDomains
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              domains:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      title: Name is the name of the domain
                    admin:
                      type: string
                      format: byte
                      title: Admin is the owner of the domain
                    broker:
                      type: string
                      format: byte
                    valid_until:
                      type: string
                      format: int64
                      title: >-
                        ValidUntil is a unix timestamp defines the time when the
                        domain will become invalid in seconds
                    type:
                      type: string
                      title: Type defines the type of the domain
                  title: Domain defines a domain
                description: Accounts is the accounts associated with broker.
              page:
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            description: >-
              QueryBrokerDomainsResponse is the response type for the
              Query/BrokerDomains RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: broker
          description: Broker is the broker of accounts.
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
      tags:
        - Query
  '/starname/v1beta1/domains/owner/{owner}':
    get:
      summary: OwnerDomains gets domains associated with a given owner.
      operationId: OwnerDomains
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              domains:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      title: Name is the name of the domain
                    admin:
                      type: string
                      format: byte
                      title: Admin is the owner of the domain
                    broker:
                      type: string
                      format: byte
                    valid_until:
                      type: string
                      format: int64
                      title: >-
                        ValidUntil is a unix timestamp defines the time when the
                        domain will become invalid in seconds
                    type:
                      type: string
                      title: Type defines the type of the domain
                  title: Domain defines a domain
                description: Accounts is the accounts associated with owner.
              page:
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            description: >-
              QueryOwnerDomainsResponse is the response type for the
              Query/OwnerDomains RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: owner
          description: Owner is the owner of accounts.
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /starname/v1beta1/yield:
    get:
      summary: Yield estimates and retrieves the annualized yield for delegators
      operationId: Yield
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              yield:
                type: string
            description: >-
              QueryYieldResponse is the response type for the Query/Yield RPC
              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /cosmwasm/wasm/v1/code:
    get:
      summary: Codes gets the metadata for all stored wasm codes
      operationId: Codes
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              code_infos:
                type: array
                items:
                  type: object
                  properties:
                    code_id:
                      type: string
                      format: uint64
                    creator:
                      type: string
                    data_hash:
                      type: string
                      format: byte
                  title: CodeInfoResponse contains code meta data from CodeInfo
              pagination:
                description: pagination defines the pagination in the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            title: >-
              QueryCodesResponse is the response type for the Query/Codes RPC
              method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
      tags:
        - Query
  '/cosmwasm/wasm/v1/code/{code_id}':
    get:
      summary: Code gets the binary code and metadata for a singe wasm code
      operationId: Code
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              code_info:
                type: object
                properties:
                  code_id:
                    type: string
                    format: uint64
                  creator:
                    type: string
                  data_hash:
                    type: string
                    format: byte
                title: CodeInfoResponse contains code meta data from CodeInfo
              data:
                type: string
                format: byte
            title: >-
              QueryCodeResponse is the response type for the Query/Code RPC
              method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: code_id
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - Query
  '/cosmwasm/wasm/v1/code/{code_id}/contracts':
    get:
      summary: ContractsByCode lists all smart contracts for a code id
      operationId: ContractsByCode
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              contracts:
                type: array
                items:
                  type: string
                title: contracts are a set of contract addresses
              pagination:
                description: pagination defines the pagination in the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            title: |-
              QueryContractsByCodeResponse is the response type for the
              Query/ContractsByCode RPC method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: code_id
          in: path
          required: true
          type: string
          format: uint64
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
      tags:
        - Query
  '/cosmwasm/wasm/v1/contract/{address}':
    get:
      summary: ContractInfo gets the contract meta data
      operationId: ContractInfo
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              address:
                type: string
                title: address is the address of the contract
              contract_info:
                type: object
                properties:
                  code_id:
                    type: string
                    format: uint64
                    title: CodeID is the reference to the stored Wasm code
                  creator:
                    type: string
                    title: Creator address who initially instantiated the contract
                  admin:
                    type: string
                    title: Admin is an optional address that can execute migrations
                  label:
                    type: string
                    description: >-
                      Label is optional metadata to be stored with a contract
                      instance.
                  created:
                    title: >-
                      Created Tx position when the contract was instantiated.

                      This data should kept internal and not be exposed via
                      query results. Just

                      use for sorting
                    type: object
                    properties:
                      block_height:
                        type: string
                        format: uint64
                        title: BlockHeight is the block the contract was created at
                      tx_index:
                        type: string
                        format: uint64
                        title: >-
                          TxIndex is a monotonic counter within the block
                          (actual transaction index,

                          or gas consumed)
                    description: >-
                      AbsoluteTxPosition is a unique transaction position that
                      allows for global

                      ordering of transactions.
                  ibc_port_id:
                    type: string
                  extension:
                    type: object
                    properties:
                      type_url:
                        type: string
                        description: >-
                          A URL/resource name that uniquely identifies the type
                          of the serialized

                          protocol buffer message. This string must contain at
                          least

                          one "/" character. The last segment of the URL's path
                          must represent

                          the fully qualified name of the type (as in

                          `path/google.protobuf.Duration`). The name should be
                          in a canonical form

                          (e.g., leading "." is not accepted).


                          In practice, teams usually precompile into the binary
                          all types that they

                          expect it to use in the context of Any. However, for
                          URLs which use the

                          scheme `http`, `https`, or no scheme, one can
                          optionally set up a type

                          server that maps type URLs to message definitions as
                          follows:


                          * If no scheme is provided, `https` is assumed.

                          * An HTTP GET on the URL must yield a
                          [google.protobuf.Type][]
                            value in binary format, or produce an error.
                          * Applications are allowed to cache lookup results
                          based on the
                            URL, or have them precompiled into a binary to avoid any
                            lookup. Therefore, binary compatibility needs to be preserved
                            on changes to types. (Use versioned type names to manage
                            breaking changes.)

                          Note: this functionality is not currently available in
                          the official

                          protobuf release, and it is not used for type URLs
                          beginning with

                          type.googleapis.com.


                          Schemes other than `http`, `https` (or the empty
                          scheme) might be

                          used with implementation specific semantics.
                      value:
                        type: string
                        format: byte
                        description: >-
                          Must be a valid serialized protocol buffer of the
                          above specified type.
                    description: >-
                      `Any` contains an arbitrary serialized protocol buffer
                      message along with a

                      URL that describes the type of the serialized message.


                      Protobuf library provides support to pack/unpack Any
                      values in the form

                      of utility functions or additional generated methods of
                      the Any type.


                      Example 1: Pack and unpack a message in C++.

                          Foo foo = ...;
                          Any any;
                          any.PackFrom(foo);
                          ...
                          if (any.UnpackTo(&foo)) {
                            ...
                          }

                      Example 2: Pack and unpack a message in Java.

                          Foo foo = ...;
                          Any any = Any.pack(foo);
                          ...
                          if (any.is(Foo.class)) {
                            foo = any.unpack(Foo.class);
                          }

                       Example 3: Pack and unpack a message in Python.

                          foo = Foo(...)
                          any = Any()
                          any.Pack(foo)
                          ...
                          if any.Is(Foo.DESCRIPTOR):
                            any.Unpack(foo)
                            ...

                       Example 4: Pack and unpack a message in Go

                           foo := &pb.Foo{...}
                           any, err := ptypes.MarshalAny(foo)
                           ...
                           foo := &pb.Foo{}
                           if err := ptypes.UnmarshalAny(any, foo); err != nil {
                             ...
                           }

                      The pack methods provided by protobuf library will by
                      default use

                      'type.googleapis.com/full.type.name' as the type URL and
                      the unpack

                      methods only use the fully qualified type name after the
                      last '/'

                      in the type URL, for example "foo.bar.com/x/y.z" will
                      yield type

                      name "y.z".



                      JSON

                      ====

                      The JSON representation of an `Any` value uses the regular

                      representation of the deserialized, embedded message, with
                      an

                      additional field `@type` which contains the type URL.
                      Example:

                          package google.profile;
                          message Person {
                            string first_name = 1;
                            string last_name = 2;
                          }

                          {
                            "@type": "type.googleapis.com/google.profile.Person",
                            "firstName": <string>,
                            "lastName": <string>
                          }

                      If the embedded message type is well-known and has a
                      custom JSON

                      representation, that representation will be embedded
                      adding a field

                      `value` which holds the custom JSON in addition to the
                      `@type`

                      field. Example (for message [google.protobuf.Duration][]):

                          {
                            "@type": "type.googleapis.com/google.protobuf.Duration",
                            "value": "1.212s"
                          }
                title: ContractInfo stores a WASM contract instance
            title: >-
              QueryContractInfoResponse is the response type for the
              Query/ContractInfo RPC

              method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: address
          description: address is the address of the contract to query
          in: path
          required: true
          type: string
      tags:
        - Query
  '/cosmwasm/wasm/v1/contract/{address}/history':
    get:
      summary: ContractHistory gets the contract code history
      operationId: ContractHistory
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              entries:
                type: array
                items:
                  type: object
                  properties:
                    operation:
                      type: string
                      enum:
                        - CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED
                        - CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT
                        - CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE
                        - CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS
                      default: CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED
                      description: >-
                        - CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED:
                        ContractCodeHistoryOperationTypeUnspecified placeholder
                        for empty value
                         - CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT: ContractCodeHistoryOperationTypeInit on chain contract instantiation
                         - CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE: ContractCodeHistoryOperationTypeMigrate code migration
                         - CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS: ContractCodeHistoryOperationTypeGenesis based on genesis data
                      title: >-
                        ContractCodeHistoryOperationType actions that caused a
                        code change
                    code_id:
                      type: string
                      format: uint64
                      title: CodeID is the reference to the stored WASM code
                    updated:
                      description: Updated Tx position when the operation was executed.
                      type: object
                      properties:
                        block_height:
                          type: string
                          format: uint64
                          title: BlockHeight is the block the contract was created at
                        tx_index:
                          type: string
                          format: uint64
                          title: >-
                            TxIndex is a monotonic counter within the block
                            (actual transaction index,

                            or gas consumed)
                    msg:
                      type: string
                      format: byte
                  description: ContractCodeHistoryEntry metadata to a contract.
              pagination:
                description: pagination defines the pagination in the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            title: |-
              QueryContractHistoryResponse is the response type for the
              Query/ContractHistory RPC method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: address
          description: address is the address of the contract to query
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
      tags:
        - Query
  '/cosmwasm/wasm/v1/contract/{address}/state':
    get:
      summary: AllContractState gets all raw store data for a single contract
      operationId: AllContractState
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              models:
                type: array
                items:
                  type: object
                  properties:
                    key:
                      type: string
                      format: byte
                      title: hex-encode key to read it better (this is often ascii)
                    value:
                      type: string
                      format: byte
                      title: base64-encode raw value
                  title: Model is a struct that holds a KV pair
              pagination:
                description: pagination defines the pagination in the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            title: |-
              QueryAllContractStateResponse is the response type for the
              Query/AllContractState RPC method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: address
          description: address is the address of the contract
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
      tags:
        - Query
  '/wasm/v1/contract/{address}/raw/{query_data}':
    get:
      summary: RawContractState gets single key from the raw store data of a contract
      operationId: RawContractState
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              data:
                type: string
                format: byte
                title: Data contains the raw store data
            title: |-
              QueryRawContractStateResponse is the response type for the
              Query/RawContractState RPC method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: address
          description: address is the address of the contract
          in: path
          required: true
          type: string
        - name: query_data
          in: path
          required: true
          type: string
          format: byte
      tags:
        - Query
  '/wasm/v1/contract/{address}/smart/{query_data}':
    get:
      summary: SmartContractState get smart query result from the contract
      operationId: SmartContractState
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              data:
                type: string
                format: byte
                title: Data contains the json data returned from the smart contract
            title: |-
              QuerySmartContractStateResponse is the response type for the
              Query/SmartContractState RPC method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: address
          description: address is the address of the contract
          in: path
          required: true
          type: string
        - name: query_data
          description: QueryData contains the query data passed to the contract
          in: path
          required: true
          type: string
          format: byte
      tags:
        - Query
definitions:
  google.protobuf.Any:
    type: object
    properties:
      type_url:
        type: string
        description: >-
          A URL/resource name that uniquely identifies the type of the
          serialized

          protocol buffer message. This string must contain at least

          one "/" character. The last segment of the URL's path must represent

          the fully qualified name of the type (as in

          `path/google.protobuf.Duration`). The name should be in a canonical
          form

          (e.g., leading "." is not accepted).


          In practice, teams usually precompile into the binary all types that
          they

          expect it to use in the context of Any. However, for URLs which use
          the

          scheme `http`, `https`, or no scheme, one can optionally set up a type

          server that maps type URLs to message definitions as follows:


          * If no scheme is provided, `https` is assumed.

          * An HTTP GET on the URL must yield a [google.protobuf.Type][]
            value in binary format, or produce an error.
          * Applications are allowed to cache lookup results based on the
            URL, or have them precompiled into a binary to avoid any
            lookup. Therefore, binary compatibility needs to be preserved
            on changes to types. (Use versioned type names to manage
            breaking changes.)

          Note: this functionality is not currently available in the official

          protobuf release, and it is not used for type URLs beginning with

          type.googleapis.com.


          Schemes other than `http`, `https` (or the empty scheme) might be

          used with implementation specific semantics.
      value:
        type: string
        format: byte
        description: >-
          Must be a valid serialized protocol buffer of the above specified
          type.
    description: >-
      `Any` contains an arbitrary serialized protocol buffer message along with
      a

      URL that describes the type of the serialized message.


      Protobuf library provides support to pack/unpack Any values in the form

      of utility functions or additional generated methods of the Any type.


      Example 1: Pack and unpack a message in C++.

          Foo foo = ...;
          Any any;
          any.PackFrom(foo);
          ...
          if (any.UnpackTo(&foo)) {
            ...
          }

      Example 2: Pack and unpack a message in Java.

          Foo foo = ...;
          Any any = Any.pack(foo);
          ...
          if (any.is(Foo.class)) {
            foo = any.unpack(Foo.class);
          }

       Example 3: Pack and unpack a message in Python.

          foo = Foo(...)
          any = Any()
          any.Pack(foo)
          ...
          if any.Is(Foo.DESCRIPTOR):
            any.Unpack(foo)
            ...

       Example 4: Pack and unpack a message in Go

           foo := &pb.Foo{...}
           any, err := ptypes.MarshalAny(foo)
           ...
           foo := &pb.Foo{}
           if err := ptypes.UnmarshalAny(any, foo); err != nil {
             ...
           }

      The pack methods provided by protobuf library will by default use

      'type.googleapis.com/full.type.name' as the type URL and the unpack

      methods only use the fully qualified type name after the last '/'

      in the type URL, for example "foo.bar.com/x/y.z" will yield type

      name "y.z".



      JSON

      ====

      The JSON representation of an `Any` value uses the regular

      representation of the deserialized, embedded message, with an

      additional field `@type` which contains the type URL. Example:

          package google.profile;
          message Person {
            string first_name = 1;
            string last_name = 2;
          }

          {
            "@type": "type.googleapis.com/google.profile.Person",
            "firstName": <string>,
            "lastName": <string>
          }

      If the embedded message type is well-known and has a custom JSON

      representation, that representation will be embedded adding a field

      `value` which holds the custom JSON in addition to the `@type`

      field. Example (for message [google.protobuf.Duration][]):

          {
            "@type": "type.googleapis.com/google.protobuf.Duration",
            "value": "1.212s"
          }
  grpc.gateway.runtime.Error:
    type: object
    properties:
      error:
        type: string
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          properties:
            type_url:
              type: string
              description: >-
                A URL/resource name that uniquely identifies the type of the
                serialized

                protocol buffer message. This string must contain at least

                one "/" character. The last segment of the URL's path must
                represent

                the fully qualified name of the type (as in

                `path/google.protobuf.Duration`). The name should be in a
                canonical form

                (e.g., leading "." is not accepted).


                In practice, teams usually precompile into the binary all types
                that they

                expect it to use in the context of Any. However, for URLs which
                use the

                scheme `http`, `https`, or no scheme, one can optionally set up
                a type

                server that maps type URLs to message definitions as follows:


                * If no scheme is provided, `https` is assumed.

                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the
                official

                protobuf release, and it is not used for type URLs beginning
                with

                type.googleapis.com.


                Schemes other than `http`, `https` (or the empty scheme) might
                be

                used with implementation specific semantics.
            value:
              type: string
              format: byte
              description: >-
                Must be a valid serialized protocol buffer of the above
                specified type.
          description: >-
            `Any` contains an arbitrary serialized protocol buffer message along
            with a

            URL that describes the type of the serialized message.


            Protobuf library provides support to pack/unpack Any values in the
            form

            of utility functions or additional generated methods of the Any
            type.


            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

             Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

             Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := ptypes.MarshalAny(foo)
                 ...
                 foo := &pb.Foo{}
                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use

            'type.googleapis.com/full.type.name' as the type URL and the unpack

            methods only use the fully qualified type name after the last '/'

            in the type URL, for example "foo.bar.com/x/y.z" will yield type

            name "y.z".



            JSON

            ====

            The JSON representation of an `Any` value uses the regular

            representation of the deserialized, embedded message, with an

            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON

            representation, that representation will be embedded adding a field

            `value` which holds the custom JSON in addition to the `@type`

            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
  starnamed.x.configuration.v1beta1.Config:
    type: object
    properties:
      configurer:
        type: string
        title: >-
          Configurer is the configuration owner, the addresses allowed to handle
          fees and register domains with no superuser
      valid_domain_name:
        type: string
        title: >-
          ValidDomainName defines a regexp that determines if a domain name is
          valid or not
      valid_account_name:
        type: string
        title: >-
          ValidAccountName defines a regexp that determines if an account name
          is valid or not
      valid_uri:
        type: string
        title: >-
          ValidURI defines a regexp that determines if resource uri is valid or
          not
      valid_resource:
        type: string
        title: ValidResource determines a regexp for a resource content
      domain_renewal_period:
        type: string
        title: >-
          DomainRenewalPeriod defines the duration of the domain renewal period
          in seconds
      domain_renewal_count_max:
        type: integer
        format: int64
        title: >-
          DomainRenewalCountMax defines maximum number of domain renewals a user
          can do
      domain_grace_period:
        type: string
        title: >-
          DomainGracePeriod defines the grace period for a domain deletion in
          seconds
      account_renewal_period:
        type: string
        title: >-
          AccountRenewalPeriod defines the duration of the account renewal
          period in seconds
      account_renewal_count_max:
        type: integer
        format: int64
        title: >-
          AccountRenewalCountMax defines maximum number of account renewals a
          user can do
      account_grace_period:
        type: string
        title: >-
          DomainGracePeriod defines the grace period for a domain deletion in
          seconds
      resources_max:
        type: integer
        format: int64
        title: >-
          ResourcesMax defines maximum number of resources could be saved under
          an account
      certificate_size_max:
        type: string
        format: uint64
        title: >-
          CertificateSizeMax defines maximum size of a certificate that could be
          saved under an account
      certificate_count_max:
        type: integer
        format: int64
        title: >-
          CertificateCountMax defines maximum number of certificates that could
          be saved under an account
      metadata_size_max:
        type: string
        format: uint64
        title: >-
          MetadataSizeMax defines maximum size of metadata that could be saved
          under an account
      escrow_broker:
        type: string
        title: >-
          EscrowBroker defines an address that will receive a commission for
          completed escrows
      escrow_commission:
        type: string
        title: >-
          EscrowCommission defines the commission taken by the broker for a
          completed escrow, between 0 (no commission) and

          1 (100% commission)
      escrow_max_period:
        type: string
        title: EscrowPeriod defines the maximum duration of an escrow in seconds
    title: Config is the configuration of the network
  starnamed.x.configuration.v1beta1.Fees:
    type: object
    properties:
      fee_coin_denom:
        type: string
        title: FeeCoinDenom defines the denominator of the coin used to process fees
      fee_coin_price:
        type: string
        title: FeeCoinPrice defines the price of the coin
      fee_default:
        type: string
        title: FeeDefault is the parameter defining the default fee
      register_account_closed:
        type: string
        title: >-
          RegisterAccountClosed is the fee to be paid to register an account in
          a closed domain
      register_account_open:
        type: string
        title: >-
          RegisterAccountOpen is the fee to be paid to register an account in an
          open domain
      transfer_account_closed:
        type: string
        title: >-
          TransferAccountClosed is the fee to be paid to register an account in
          a closed domain
      transfer_account_open:
        type: string
        title: >-
          TransferAccountOpen is the fee to be paid to register an account in an
          open domain
      replace_account_resources:
        type: string
        title: >-
          ReplaceAccountResources is the fee to be paid to replace account's
          resources
      add_account_certificate:
        type: string
        title: >-
          AddAccountCertificate is the fee to be paid to add a certificate to an
          account
      del_account_certificate:
        type: string
        title: >-
          DelAccountCertificate is the feed to be paid to delete a certificate
          in an account
      set_account_metadata:
        type: string
        title: SetAccountMetadata is the fee to be paid to set account's metadata
      register_domain_1:
        type: string
        title: >-
          RegisterDomain1 is the fee to be paid to register a domain with one
          character
      register_domain_2:
        type: string
        title: >-
          RegisterDomain2 is the fee to be paid to register a domain with two
          characters
      register_domain_3:
        type: string
        title: >-
          RegisterDomain3 is the fee to be paid to register a domain with three
          characters
      register_domain_4:
        type: string
        title: >-
          RegisterDomain4 is the fee to be paid to register a domain with four
          characters
      register_domain_5:
        type: string
        title: >-
          RegisterDomain5 is the fee to be paid to register a domain with five
          characters
      register_domain_default:
        type: string
        title: >-
          RegisterDomainDefault is the fee to be paid to register a domain with
          more than five characters
      register_open_domain_multiplier:
        type: string
        title: >-
          register_open_domain_multiplier is the multiplication applied to fees
          in register domain operations if they're of open type
      transfer_domain_closed:
        type: string
        title: >-
          transfer_domain_closed is the fee to be paid to transfer a closed
          domain
      transfer_domain_open:
        type: string
        title: transfer_domain_open is the fee to be paid to transfer open domains
      renew_domain_open:
        type: string
        title: renew_domain_open is the fee to be paid to renew an open domain
      create_escrow:
        type: string
        title: create_escrow is the fee to be paid to create an escrow
      update_escrow:
        type: string
        title: update_escrow is the fee to be paid to update an escrow
      transfer_to_escrow:
        type: string
        title: >-
          transfer_to_escrow is the fee to be paid to transfer coins to an
          escrow
      refund_escrow:
        type: string
        title: >-
          refund_escrow is the fee to be paid to refund the account or domain
          placed in an escrow
    title: >-
      Fees contains different type of fees to calculate coins to detract when
      processing different messages
  starnamed.x.configuration.v1beta1.QueryConfigResponse:
    type: object
    properties:
      config:
        description: Configuration is the starname configuration.
        type: object
        properties:
          configurer:
            type: string
            title: >-
              Configurer is the configuration owner, the addresses allowed to
              handle fees and register domains with no superuser
          valid_domain_name:
            type: string
            title: >-
              ValidDomainName defines a regexp that determines if a domain name
              is valid or not
          valid_account_name:
            type: string
            title: >-
              ValidAccountName defines a regexp that determines if an account
              name is valid or not
          valid_uri:
            type: string
            title: >-
              ValidURI defines a regexp that determines if resource uri is valid
              or not
          valid_resource:
            type: string
            title: ValidResource determines a regexp for a resource content
          domain_renewal_period:
            type: string
            title: >-
              DomainRenewalPeriod defines the duration of the domain renewal
              period in seconds
          domain_renewal_count_max:
            type: integer
            format: int64
            title: >-
              DomainRenewalCountMax defines maximum number of domain renewals a
              user can do
          domain_grace_period:
            type: string
            title: >-
              DomainGracePeriod defines the grace period for a domain deletion
              in seconds
          account_renewal_period:
            type: string
            title: >-
              AccountRenewalPeriod defines the duration of the account renewal
              period in seconds
          account_renewal_count_max:
            type: integer
            format: int64
            title: >-
              AccountRenewalCountMax defines maximum number of account renewals
              a user can do
          account_grace_period:
            type: string
            title: >-
              DomainGracePeriod defines the grace period for a domain deletion
              in seconds
          resources_max:
            type: integer
            format: int64
            title: >-
              ResourcesMax defines maximum number of resources could be saved
              under an account
          certificate_size_max:
            type: string
            format: uint64
            title: >-
              CertificateSizeMax defines maximum size of a certificate that
              could be saved under an account
          certificate_count_max:
            type: integer
            format: int64
            title: >-
              CertificateCountMax defines maximum number of certificates that
              could be saved under an account
          metadata_size_max:
            type: string
            format: uint64
            title: >-
              MetadataSizeMax defines maximum size of metadata that could be
              saved under an account
          escrow_broker:
            type: string
            title: >-
              EscrowBroker defines an address that will receive a commission for
              completed escrows
          escrow_commission:
            type: string
            title: >-
              EscrowCommission defines the commission taken by the broker for a
              completed escrow, between 0 (no commission) and

              1 (100% commission)
          escrow_max_period:
            type: string
            title: EscrowPeriod defines the maximum duration of an escrow in seconds
        title: Config is the configuration of the network
    description: >-
      QueryConfigResponse is the response type for the Query/Configuration RPC
      method.
  starnamed.x.configuration.v1beta1.QueryFeesResponse:
    type: object
    properties:
      fees:
        description: Fees is the starname product fee object.
        type: object
        properties:
          fee_coin_denom:
            type: string
            title: >-
              FeeCoinDenom defines the denominator of the coin used to process
              fees
          fee_coin_price:
            type: string
            title: FeeCoinPrice defines the price of the coin
          fee_default:
            type: string
            title: FeeDefault is the parameter defining the default fee
          register_account_closed:
            type: string
            title: >-
              RegisterAccountClosed is the fee to be paid to register an account
              in a closed domain
          register_account_open:
            type: string
            title: >-
              RegisterAccountOpen is the fee to be paid to register an account
              in an open domain
          transfer_account_closed:
            type: string
            title: >-
              TransferAccountClosed is the fee to be paid to register an account
              in a closed domain
          transfer_account_open:
            type: string
            title: >-
              TransferAccountOpen is the fee to be paid to register an account
              in an open domain
          replace_account_resources:
            type: string
            title: >-
              ReplaceAccountResources is the fee to be paid to replace account's
              resources
          add_account_certificate:
            type: string
            title: >-
              AddAccountCertificate is the fee to be paid to add a certificate
              to an account
          del_account_certificate:
            type: string
            title: >-
              DelAccountCertificate is the feed to be paid to delete a
              certificate in an account
          set_account_metadata:
            type: string
            title: SetAccountMetadata is the fee to be paid to set account's metadata
          register_domain_1:
            type: string
            title: >-
              RegisterDomain1 is the fee to be paid to register a domain with
              one character
          register_domain_2:
            type: string
            title: >-
              RegisterDomain2 is the fee to be paid to register a domain with
              two characters
          register_domain_3:
            type: string
            title: >-
              RegisterDomain3 is the fee to be paid to register a domain with
              three characters
          register_domain_4:
            type: string
            title: >-
              RegisterDomain4 is the fee to be paid to register a domain with
              four characters
          register_domain_5:
            type: string
            title: >-
              RegisterDomain5 is the fee to be paid to register a domain with
              five characters
          register_domain_default:
            type: string
            title: >-
              RegisterDomainDefault is the fee to be paid to register a domain
              with more than five characters
          register_open_domain_multiplier:
            type: string
            title: >-
              register_open_domain_multiplier is the multiplication applied to
              fees in register domain operations if they're of open type
          transfer_domain_closed:
            type: string
            title: >-
              transfer_domain_closed is the fee to be paid to transfer a closed
              domain
          transfer_domain_open:
            type: string
            title: >-
              transfer_domain_open is the fee to be paid to transfer open
              domains
          renew_domain_open:
            type: string
            title: renew_domain_open is the fee to be paid to renew an open domain
          create_escrow:
            type: string
            title: create_escrow is the fee to be paid to create an escrow
          update_escrow:
            type: string
            title: update_escrow is the fee to be paid to update an escrow
          transfer_to_escrow:
            type: string
            title: >-
              transfer_to_escrow is the fee to be paid to transfer coins to an
              escrow
          refund_escrow:
            type: string
            title: >-
              refund_escrow is the fee to be paid to refund the account or
              domain placed in an escrow
        title: >-
          Fees contains different type of fees to calculate coins to detract
          when processing different messages
    title: QueryFeesResponse is the response type for the Query/Fees RPC method
  cosmos.base.v1beta1.Coin:
    type: object
    properties:
      denom:
        type: string
      amount:
        type: string
    description: |-
      Coin defines a token with a denomination and an amount.

      NOTE: The amount field is an Int which implements the custom method
      signatures required by gogoproto.
  starnamed.x.escrow.v1beta1.Escrow:
    type: object
    properties:
      id:
        type: string
      seller:
        type: string
      object:
        type: object
        properties:
          type_url:
            type: string
            description: >-
              A URL/resource name that uniquely identifies the type of the
              serialized

              protocol buffer message. This string must contain at least

              one "/" character. The last segment of the URL's path must
              represent

              the fully qualified name of the type (as in

              `path/google.protobuf.Duration`). The name should be in a
              canonical form

              (e.g., leading "." is not accepted).


              In practice, teams usually precompile into the binary all types
              that they

              expect it to use in the context of Any. However, for URLs which
              use the

              scheme `http`, `https`, or no scheme, one can optionally set up a
              type

              server that maps type URLs to message definitions as follows:


              * If no scheme is provided, `https` is assumed.

              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                value in binary format, or produce an error.
              * Applications are allowed to cache lookup results based on the
                URL, or have them precompiled into a binary to avoid any
                lookup. Therefore, binary compatibility needs to be preserved
                on changes to types. (Use versioned type names to manage
                breaking changes.)

              Note: this functionality is not currently available in the
              official

              protobuf release, and it is not used for type URLs beginning with

              type.googleapis.com.


              Schemes other than `http`, `https` (or the empty scheme) might be

              used with implementation specific semantics.
          value:
            type: string
            format: byte
            description: >-
              Must be a valid serialized protocol buffer of the above specified
              type.
        description: >-
          `Any` contains an arbitrary serialized protocol buffer message along
          with a

          URL that describes the type of the serialized message.


          Protobuf library provides support to pack/unpack Any values in the
          form

          of utility functions or additional generated methods of the Any type.


          Example 1: Pack and unpack a message in C++.

              Foo foo = ...;
              Any any;
              any.PackFrom(foo);
              ...
              if (any.UnpackTo(&foo)) {
                ...
              }

          Example 2: Pack and unpack a message in Java.

              Foo foo = ...;
              Any any = Any.pack(foo);
              ...
              if (any.is(Foo.class)) {
                foo = any.unpack(Foo.class);
              }

           Example 3: Pack and unpack a message in Python.

              foo = Foo(...)
              any = Any()
              any.Pack(foo)
              ...
              if any.Is(Foo.DESCRIPTOR):
                any.Unpack(foo)
                ...

           Example 4: Pack and unpack a message in Go

               foo := &pb.Foo{...}
               any, err := ptypes.MarshalAny(foo)
               ...
               foo := &pb.Foo{}
               if err := ptypes.UnmarshalAny(any, foo); err != nil {
                 ...
               }

          The pack methods provided by protobuf library will by default use

          'type.googleapis.com/full.type.name' as the type URL and the unpack

          methods only use the fully qualified type name after the last '/'

          in the type URL, for example "foo.bar.com/x/y.z" will yield type

          name "y.z".



          JSON

          ====

          The JSON representation of an `Any` value uses the regular

          representation of the deserialized, embedded message, with an

          additional field `@type` which contains the type URL. Example:

              package google.profile;
              message Person {
                string first_name = 1;
                string last_name = 2;
              }

              {
                "@type": "type.googleapis.com/google.profile.Person",
                "firstName": <string>,
                "lastName": <string>
              }

          If the embedded message type is well-known and has a custom JSON

          representation, that representation will be embedded adding a field

          `value` which holds the custom JSON in addition to the `@type`

          field. Example (for message [google.protobuf.Duration][]):

              {
                "@type": "type.googleapis.com/google.protobuf.Duration",
                "value": "1.212s"
              }
      price:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
        title: >-
          TODO: refactor this to use sdk.Coin instead of sdk.Coins

          Although the price contains multiple coins, for now we enforce a
          specific denomination, so there will be only

          one coin type in a valid escrow
      state:
        type: string
        enum:
          - ESCROW_STATE_OPEN
          - ESCROW_STATE_COMPLETED
          - ESCROW_STATE_REFUNDED
          - ESCROW_STATE_EXPIRED
        default: ESCROW_STATE_OPEN
        description: |-
          - ESCROW_STATE_OPEN: ESCROW_STATE_OPEN defines an open state.
           - ESCROW_STATE_COMPLETED: ESCROW_STATE_COMPLETED defines a completed state.
           - ESCROW_STATE_REFUNDED: ESCROW_STATE_REFUNDED defines a refunded state.
           - ESCROW_STATE_EXPIRED: ESCROW_STATE_REFUNDED defines an expired state.
        title: EscrowState defines the state of an escrow
      deadline:
        type: string
        format: uint64
      broker_address:
        type: string
      broker_commission:
        type: string
    title: Escrow defines the struct of an escrow
  starnamed.x.escrow.v1beta1.EscrowState:
    type: string
    enum:
      - ESCROW_STATE_OPEN
      - ESCROW_STATE_COMPLETED
      - ESCROW_STATE_REFUNDED
      - ESCROW_STATE_EXPIRED
    default: ESCROW_STATE_OPEN
    description: |-
      - ESCROW_STATE_OPEN: ESCROW_STATE_OPEN defines an open state.
       - ESCROW_STATE_COMPLETED: ESCROW_STATE_COMPLETED defines a completed state.
       - ESCROW_STATE_REFUNDED: ESCROW_STATE_REFUNDED defines a refunded state.
       - ESCROW_STATE_EXPIRED: ESCROW_STATE_REFUNDED defines an expired state.
    title: EscrowState defines the state of an escrow
  starnamed.x.escrow.v1beta1.QueryEscrowResponse:
    type: object
    properties:
      escrow:
        type: object
        properties:
          id:
            type: string
          seller:
            type: string
          object:
            type: object
            properties:
              type_url:
                type: string
                description: >-
                  A URL/resource name that uniquely identifies the type of the
                  serialized

                  protocol buffer message. This string must contain at least

                  one "/" character. The last segment of the URL's path must
                  represent

                  the fully qualified name of the type (as in

                  `path/google.protobuf.Duration`). The name should be in a
                  canonical form

                  (e.g., leading "." is not accepted).


                  In practice, teams usually precompile into the binary all
                  types that they

                  expect it to use in the context of Any. However, for URLs
                  which use the

                  scheme `http`, `https`, or no scheme, one can optionally set
                  up a type

                  server that maps type URLs to message definitions as follows:


                  * If no scheme is provided, `https` is assumed.

                  * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                    value in binary format, or produce an error.
                  * Applications are allowed to cache lookup results based on
                  the
                    URL, or have them precompiled into a binary to avoid any
                    lookup. Therefore, binary compatibility needs to be preserved
                    on changes to types. (Use versioned type names to manage
                    breaking changes.)

                  Note: this functionality is not currently available in the
                  official

                  protobuf release, and it is not used for type URLs beginning
                  with

                  type.googleapis.com.


                  Schemes other than `http`, `https` (or the empty scheme) might
                  be

                  used with implementation specific semantics.
              value:
                type: string
                format: byte
                description: >-
                  Must be a valid serialized protocol buffer of the above
                  specified type.
            description: >-
              `Any` contains an arbitrary serialized protocol buffer message
              along with a

              URL that describes the type of the serialized message.


              Protobuf library provides support to pack/unpack Any values in the
              form

              of utility functions or additional generated methods of the Any
              type.


              Example 1: Pack and unpack a message in C++.

                  Foo foo = ...;
                  Any any;
                  any.PackFrom(foo);
                  ...
                  if (any.UnpackTo(&foo)) {
                    ...
                  }

              Example 2: Pack and unpack a message in Java.

                  Foo foo = ...;
                  Any any = Any.pack(foo);
                  ...
                  if (any.is(Foo.class)) {
                    foo = any.unpack(Foo.class);
                  }

               Example 3: Pack and unpack a message in Python.

                  foo = Foo(...)
                  any = Any()
                  any.Pack(foo)
                  ...
                  if any.Is(Foo.DESCRIPTOR):
                    any.Unpack(foo)
                    ...

               Example 4: Pack and unpack a message in Go

                   foo := &pb.Foo{...}
                   any, err := ptypes.MarshalAny(foo)
                   ...
                   foo := &pb.Foo{}
                   if err := ptypes.UnmarshalAny(any, foo); err != nil {
                     ...
                   }

              The pack methods provided by protobuf library will by default use

              'type.googleapis.com/full.type.name' as the type URL and the
              unpack

              methods only use the fully qualified type name after the last '/'

              in the type URL, for example "foo.bar.com/x/y.z" will yield type

              name "y.z".



              JSON

              ====

              The JSON representation of an `Any` value uses the regular

              representation of the deserialized, embedded message, with an

              additional field `@type` which contains the type URL. Example:

                  package google.profile;
                  message Person {
                    string first_name = 1;
                    string last_name = 2;
                  }

                  {
                    "@type": "type.googleapis.com/google.profile.Person",
                    "firstName": <string>,
                    "lastName": <string>
                  }

              If the embedded message type is well-known and has a custom JSON

              representation, that representation will be embedded adding a
              field

              `value` which holds the custom JSON in addition to the `@type`

              field. Example (for message [google.protobuf.Duration][]):

                  {
                    "@type": "type.googleapis.com/google.protobuf.Duration",
                    "value": "1.212s"
                  }
          price:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
            title: >-
              TODO: refactor this to use sdk.Coin instead of sdk.Coins

              Although the price contains multiple coins, for now we enforce a
              specific denomination, so there will be only

              one coin type in a valid escrow
          state:
            type: string
            enum:
              - ESCROW_STATE_OPEN
              - ESCROW_STATE_COMPLETED
              - ESCROW_STATE_REFUNDED
              - ESCROW_STATE_EXPIRED
            default: ESCROW_STATE_OPEN
            description: |-
              - ESCROW_STATE_OPEN: ESCROW_STATE_OPEN defines an open state.
               - ESCROW_STATE_COMPLETED: ESCROW_STATE_COMPLETED defines a completed state.
               - ESCROW_STATE_REFUNDED: ESCROW_STATE_REFUNDED defines a refunded state.
               - ESCROW_STATE_EXPIRED: ESCROW_STATE_REFUNDED defines an expired state.
            title: EscrowState defines the state of an escrow
          deadline:
            type: string
            format: uint64
          broker_address:
            type: string
          broker_commission:
            type: string
        title: Escrow defines the struct of an escrow
    title: QueryEscrowResponse is the response type for the Query/Escrow RPC method
  starnamed.x.escrow.v1beta1.QueryEscrowsResponse:
    type: object
    properties:
      escrows:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
            seller:
              type: string
            object:
              type: object
              properties:
                type_url:
                  type: string
                  description: >-
                    A URL/resource name that uniquely identifies the type of the
                    serialized

                    protocol buffer message. This string must contain at least

                    one "/" character. The last segment of the URL's path must
                    represent

                    the fully qualified name of the type (as in

                    `path/google.protobuf.Duration`). The name should be in a
                    canonical form

                    (e.g., leading "." is not accepted).


                    In practice, teams usually precompile into the binary all
                    types that they

                    expect it to use in the context of Any. However, for URLs
                    which use the

                    scheme `http`, `https`, or no scheme, one can optionally set
                    up a type

                    server that maps type URLs to message definitions as
                    follows:


                    * If no scheme is provided, `https` is assumed.

                    * An HTTP GET on the URL must yield a
                    [google.protobuf.Type][]
                      value in binary format, or produce an error.
                    * Applications are allowed to cache lookup results based on
                    the
                      URL, or have them precompiled into a binary to avoid any
                      lookup. Therefore, binary compatibility needs to be preserved
                      on changes to types. (Use versioned type names to manage
                      breaking changes.)

                    Note: this functionality is not currently available in the
                    official

                    protobuf release, and it is not used for type URLs beginning
                    with

                    type.googleapis.com.


                    Schemes other than `http`, `https` (or the empty scheme)
                    might be

                    used with implementation specific semantics.
                value:
                  type: string
                  format: byte
                  description: >-
                    Must be a valid serialized protocol buffer of the above
                    specified type.
              description: >-
                `Any` contains an arbitrary serialized protocol buffer message
                along with a

                URL that describes the type of the serialized message.


                Protobuf library provides support to pack/unpack Any values in
                the form

                of utility functions or additional generated methods of the Any
                type.


                Example 1: Pack and unpack a message in C++.

                    Foo foo = ...;
                    Any any;
                    any.PackFrom(foo);
                    ...
                    if (any.UnpackTo(&foo)) {
                      ...
                    }

                Example 2: Pack and unpack a message in Java.

                    Foo foo = ...;
                    Any any = Any.pack(foo);
                    ...
                    if (any.is(Foo.class)) {
                      foo = any.unpack(Foo.class);
                    }

                 Example 3: Pack and unpack a message in Python.

                    foo = Foo(...)
                    any = Any()
                    any.Pack(foo)
                    ...
                    if any.Is(Foo.DESCRIPTOR):
                      any.Unpack(foo)
                      ...

                 Example 4: Pack and unpack a message in Go

                     foo := &pb.Foo{...}
                     any, err := ptypes.MarshalAny(foo)
                     ...
                     foo := &pb.Foo{}
                     if err := ptypes.UnmarshalAny(any, foo); err != nil {
                       ...
                     }

                The pack methods provided by protobuf library will by default
                use

                'type.googleapis.com/full.type.name' as the type URL and the
                unpack

                methods only use the fully qualified type name after the last
                '/'

                in the type URL, for example "foo.bar.com/x/y.z" will yield type

                name "y.z".



                JSON

                ====

                The JSON representation of an `Any` value uses the regular

                representation of the deserialized, embedded message, with an

                additional field `@type` which contains the type URL. Example:

                    package google.profile;
                    message Person {
                      string first_name = 1;
                      string last_name = 2;
                    }

                    {
                      "@type": "type.googleapis.com/google.profile.Person",
                      "firstName": <string>,
                      "lastName": <string>
                    }

                If the embedded message type is well-known and has a custom JSON

                representation, that representation will be embedded adding a
                field

                `value` which holds the custom JSON in addition to the `@type`

                field. Example (for message [google.protobuf.Duration][]):

                    {
                      "@type": "type.googleapis.com/google.protobuf.Duration",
                      "value": "1.212s"
                    }
            price:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
              title: >-
                TODO: refactor this to use sdk.Coin instead of sdk.Coins

                Although the price contains multiple coins, for now we enforce a
                specific denomination, so there will be only

                one coin type in a valid escrow
            state:
              type: string
              enum:
                - ESCROW_STATE_OPEN
                - ESCROW_STATE_COMPLETED
                - ESCROW_STATE_REFUNDED
                - ESCROW_STATE_EXPIRED
              default: ESCROW_STATE_OPEN
              description: |-
                - ESCROW_STATE_OPEN: ESCROW_STATE_OPEN defines an open state.
                 - ESCROW_STATE_COMPLETED: ESCROW_STATE_COMPLETED defines a completed state.
                 - ESCROW_STATE_REFUNDED: ESCROW_STATE_REFUNDED defines a refunded state.
                 - ESCROW_STATE_EXPIRED: ESCROW_STATE_REFUNDED defines an expired state.
              title: EscrowState defines the state of an escrow
            deadline:
              type: string
              format: uint64
            broker_address:
              type: string
            broker_commission:
              type: string
          title: Escrow defines the struct of an escrow
    title: QueryEscrowsResponse is the response type for the Query/Escrows RPC method
  cosmos.base.query.v1beta1.PageRequest:
    type: object
    properties:
      key:
        type: string
        format: byte
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
      offset:
        type: string
        format: uint64
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
      limit:
        type: string
        format: uint64
        description: >-
          limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.
      count_total:
        type: boolean
        description: >-
          count_total is set to true  to indicate that the result set should
          include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when
          key

          is set.
    description: |-
      message SomeRequest {
               Foo some_parameter = 1;
               PageRequest pagination = 2;
       }
    title: |-
      PageRequest is to be embedded in gRPC request messages for efficient
      pagination. Ex:
  cosmos.base.query.v1beta1.PageResponse:
    type: object
    properties:
      next_key:
        type: string
        format: byte
        title: |-
          next_key is the key to be passed to PageRequest.key to
          query the next page most efficiently
      total:
        type: string
        format: uint64
        title: |-
          total is total number of results available if PageRequest.count_total
          was set, its value is undefined otherwise
    description: |-
      PageResponse is to be embedded in gRPC response messages where the
      corresponding request message has used PageRequest.

       message SomeResponse {
               repeated Bar results = 1;
               PageResponse page = 2;
       }
  starnamed.x.starname.v1beta1.Account:
    type: object
    properties:
      domain:
        type: string
        title: Domain references the domain this account belongs to
      name:
        type: string
        title: Name is the name of the account
      owner:
        type: string
        format: byte
        title: Owner is the address that owns the account
      broker:
        type: string
        format: byte
        title: >-
          Broker identifies an entity that facilitated the transaction of the
          account and can be empty
      valid_until:
        type: string
        format: int64
        title: >-
          ValidUntil defines a unix timestamp of the expiration of the account
          in seconds
      resources:
        type: array
        items:
          type: object
          properties:
            uri:
              type: string
              title: URI defines the ID of the resource
            resource:
              type: string
              title: Resource is the resource
          title: Resource defines a resource owned by an account
        title: Resources is the list of resources an account resolves to
      certificates:
        type: array
        items:
          type: string
          format: byte
        title: >-
          Certificates contains the list of certificates to identify the account
          owner
      metadata_uri:
        type: string
        title: MetadataURI contains a link to extra information regarding the account
    title: |-
      Account defines an account that belongs to a domain
      NOTE: It should not be confused with cosmos-sdk auth account
      github.com/cosmos/cosmos-sdk/x/auth.Account
  starnamed.x.starname.v1beta1.Domain:
    type: object
    properties:
      name:
        type: string
        title: Name is the name of the domain
      admin:
        type: string
        format: byte
        title: Admin is the owner of the domain
      broker:
        type: string
        format: byte
      valid_until:
        type: string
        format: int64
        title: >-
          ValidUntil is a unix timestamp defines the time when the domain will
          become invalid in seconds
      type:
        type: string
        title: Type defines the type of the domain
    title: Domain defines a domain
  starnamed.x.starname.v1beta1.QueryBrokerAccountsResponse:
    type: object
    properties:
      accounts:
        type: array
        items:
          type: object
          properties:
            domain:
              type: string
              title: Domain references the domain this account belongs to
            name:
              type: string
              title: Name is the name of the account
            owner:
              type: string
              format: byte
              title: Owner is the address that owns the account
            broker:
              type: string
              format: byte
              title: >-
                Broker identifies an entity that facilitated the transaction of
                the account and can be empty
            valid_until:
              type: string
              format: int64
              title: >-
                ValidUntil defines a unix timestamp of the expiration of the
                account in seconds
            resources:
              type: array
              items:
                type: object
                properties:
                  uri:
                    type: string
                    title: URI defines the ID of the resource
                  resource:
                    type: string
                    title: Resource is the resource
                title: Resource defines a resource owned by an account
              title: Resources is the list of resources an account resolves to
            certificates:
              type: array
              items:
                type: string
                format: byte
              title: >-
                Certificates contains the list of certificates to identify the
                account owner
            metadata_uri:
              type: string
              title: >-
                MetadataURI contains a link to extra information regarding the
                account
          title: |-
            Account defines an account that belongs to a domain
            NOTE: It should not be confused with cosmos-sdk auth account
            github.com/cosmos/cosmos-sdk/x/auth.Account
        description: Accounts is the accounts associated with broker.
      page:
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
    description: >-
      QueryBrokerAccountsResponse is the response type for the
      Query/BrokerAccounts RPC method.
  starnamed.x.starname.v1beta1.QueryBrokerDomainsResponse:
    type: object
    properties:
      domains:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
              title: Name is the name of the domain
            admin:
              type: string
              format: byte
              title: Admin is the owner of the domain
            broker:
              type: string
              format: byte
            valid_until:
              type: string
              format: int64
              title: >-
                ValidUntil is a unix timestamp defines the time when the domain
                will become invalid in seconds
            type:
              type: string
              title: Type defines the type of the domain
          title: Domain defines a domain
        description: Accounts is the accounts associated with broker.
      page:
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
    description: >-
      QueryBrokerDomainsResponse is the response type for the
      Query/BrokerDomains RPC method.
  starnamed.x.starname.v1beta1.QueryDomainAccountsResponse:
    type: object
    properties:
      accounts:
        type: array
        items:
          type: object
          properties:
            domain:
              type: string
              title: Domain references the domain this account belongs to
            name:
              type: string
              title: Name is the name of the account
            owner:
              type: string
              format: byte
              title: Owner is the address that owns the account
            broker:
              type: string
              format: byte
              title: >-
                Broker identifies an entity that facilitated the transaction of
                the account and can be empty
            valid_until:
              type: string
              format: int64
              title: >-
                ValidUntil defines a unix timestamp of the expiration of the
                account in seconds
            resources:
              type: array
              items:
                type: object
                properties:
                  uri:
                    type: string
                    title: URI defines the ID of the resource
                  resource:
                    type: string
                    title: Resource is the resource
                title: Resource defines a resource owned by an account
              title: Resources is the list of resources an account resolves to
            certificates:
              type: array
              items:
                type: string
                format: byte
              title: >-
                Certificates contains the list of certificates to identify the
                account owner
            metadata_uri:
              type: string
              title: >-
                MetadataURI contains a link to extra information regarding the
                account
          title: |-
            Account defines an account that belongs to a domain
            NOTE: It should not be confused with cosmos-sdk auth account
            github.com/cosmos/cosmos-sdk/x/auth.Account
        description: Accounts is the accounts associated with the domain.
      page:
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
    description: >-
      QueryDomainAccountsResponse is the response type for the
      Query/DomainAccounts RPC method.
  starnamed.x.starname.v1beta1.QueryDomainResponse:
    type: object
    properties:
      domain:
        description: Domain is the information associated with the domain.
        type: object
        properties:
          name:
            type: string
            title: Name is the name of the domain
          admin:
            type: string
            format: byte
            title: Admin is the owner of the domain
          broker:
            type: string
            format: byte
          valid_until:
            type: string
            format: int64
            title: >-
              ValidUntil is a unix timestamp defines the time when the domain
              will become invalid in seconds
          type:
            type: string
            title: Type defines the type of the domain
        title: Domain defines a domain
    description: QueryDomainResponse is the response type for the Query/Domain RPC method.
  starnamed.x.starname.v1beta1.QueryOwnerAccountsResponse:
    type: object
    properties:
      accounts:
        type: array
        items:
          type: object
          properties:
            domain:
              type: string
              title: Domain references the domain this account belongs to
            name:
              type: string
              title: Name is the name of the account
            owner:
              type: string
              format: byte
              title: Owner is the address that owns the account
            broker:
              type: string
              format: byte
              title: >-
                Broker identifies an entity that facilitated the transaction of
                the account and can be empty
            valid_until:
              type: string
              format: int64
              title: >-
                ValidUntil defines a unix timestamp of the expiration of the
                account in seconds
            resources:
              type: array
              items:
                type: object
                properties:
                  uri:
                    type: string
                    title: URI defines the ID of the resource
                  resource:
                    type: string
                    title: Resource is the resource
                title: Resource defines a resource owned by an account
              title: Resources is the list of resources an account resolves to
            certificates:
              type: array
              items:
                type: string
                format: byte
              title: >-
                Certificates contains the list of certificates to identify the
                account owner
            metadata_uri:
              type: string
              title: >-
                MetadataURI contains a link to extra information regarding the
                account
          title: |-
            Account defines an account that belongs to a domain
            NOTE: It should not be confused with cosmos-sdk auth account
            github.com/cosmos/cosmos-sdk/x/auth.Account
        description: Accounts is the accounts associated with owner.
      page:
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
    description: >-
      QueryOwnerAccountsResponse is the response type for the
      Query/OwnerAccounts RPC method.
  starnamed.x.starname.v1beta1.QueryOwnerDomainsResponse:
    type: object
    properties:
      domains:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
              title: Name is the name of the domain
            admin:
              type: string
              format: byte
              title: Admin is the owner of the domain
            broker:
              type: string
              format: byte
            valid_until:
              type: string
              format: int64
              title: >-
                ValidUntil is a unix timestamp defines the time when the domain
                will become invalid in seconds
            type:
              type: string
              title: Type defines the type of the domain
          title: Domain defines a domain
        description: Accounts is the accounts associated with owner.
      page:
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
    description: >-
      QueryOwnerDomainsResponse is the response type for the Query/OwnerDomains
      RPC method.
  starnamed.x.starname.v1beta1.QueryResourceAccountsResponse:
    type: object
    properties:
      accounts:
        type: array
        items:
          type: object
          properties:
            domain:
              type: string
              title: Domain references the domain this account belongs to
            name:
              type: string
              title: Name is the name of the account
            owner:
              type: string
              format: byte
              title: Owner is the address that owns the account
            broker:
              type: string
              format: byte
              title: >-
                Broker identifies an entity that facilitated the transaction of
                the account and can be empty
            valid_until:
              type: string
              format: int64
              title: >-
                ValidUntil defines a unix timestamp of the expiration of the
                account in seconds
            resources:
              type: array
              items:
                type: object
                properties:
                  uri:
                    type: string
                    title: URI defines the ID of the resource
                  resource:
                    type: string
                    title: Resource is the resource
                title: Resource defines a resource owned by an account
              title: Resources is the list of resources an account resolves to
            certificates:
              type: array
              items:
                type: string
                format: byte
              title: >-
                Certificates contains the list of certificates to identify the
                account owner
            metadata_uri:
              type: string
              title: >-
                MetadataURI contains a link to extra information regarding the
                account
          title: |-
            Account defines an account that belongs to a domain
            NOTE: It should not be confused with cosmos-sdk auth account
            github.com/cosmos/cosmos-sdk/x/auth.Account
        description: Accounts are the accounts associated with the resource.
      page:
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
    description: >-
      QueryResourceAccountsResponse is the response type for the
      Query/ResourceAccounts RPC method.
  starnamed.x.starname.v1beta1.QueryStarnameResponse:
    type: object
    properties:
      account:
        description: Account is the information associated with the starname.
        type: object
        properties:
          domain:
            type: string
            title: Domain references the domain this account belongs to
          name:
            type: string
            title: Name is the name of the account
          owner:
            type: string
            format: byte
            title: Owner is the address that owns the account
          broker:
            type: string
            format: byte
            title: >-
              Broker identifies an entity that facilitated the transaction of
              the account and can be empty
          valid_until:
            type: string
            format: int64
            title: >-
              ValidUntil defines a unix timestamp of the expiration of the
              account in seconds
          resources:
            type: array
            items:
              type: object
              properties:
                uri:
                  type: string
                  title: URI defines the ID of the resource
                resource:
                  type: string
                  title: Resource is the resource
              title: Resource defines a resource owned by an account
            title: Resources is the list of resources an account resolves to
          certificates:
            type: array
            items:
              type: string
              format: byte
            title: >-
              Certificates contains the list of certificates to identify the
              account owner
          metadata_uri:
            type: string
            title: >-
              MetadataURI contains a link to extra information regarding the
              account
        title: |-
          Account defines an account that belongs to a domain
          NOTE: It should not be confused with cosmos-sdk auth account
          github.com/cosmos/cosmos-sdk/x/auth.Account
    description: >-
      QueryStarnameResponse is the response type for the Query/Starname RPC
      method.
  starnamed.x.starname.v1beta1.QueryYieldResponse:
    type: object
    properties:
      yield:
        type: string
    description: QueryYieldResponse is the response type for the Query/Yield RPC method.
  starnamed.x.starname.v1beta1.Resource:
    type: object
    properties:
      uri:
        type: string
        title: URI defines the ID of the resource
      resource:
        type: string
        title: Resource is the resource
    title: Resource defines a resource owned by an account
  starnamed.x.wasm.v1beta1.AbsoluteTxPosition:
    type: object
    properties:
      block_height:
        type: string
        format: uint64
        title: BlockHeight is the block the contract was created at
      tx_index:
        type: string
        format: uint64
        title: >-
          TxIndex is a monotonic counter within the block (actual transaction
          index,

          or gas consumed)
    description: |-
      AbsoluteTxPosition is a unique transaction position that allows for global
      ordering of transactions.
  starnamed.x.wasm.v1beta1.CodeInfoResponse:
    type: object
    properties:
      code_id:
        type: string
        format: uint64
      creator:
        type: string
      data_hash:
        type: string
        format: byte
    title: CodeInfoResponse contains code meta data from CodeInfo
  starnamed.x.wasm.v1beta1.ContractCodeHistoryEntry:
    type: object
    properties:
      operation:
        type: string
        enum:
          - CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED
          - CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT
          - CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE
          - CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS
        default: CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED
        description: >-
          - CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED:
          ContractCodeHistoryOperationTypeUnspecified placeholder for empty
          value
           - CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT: ContractCodeHistoryOperationTypeInit on chain contract instantiation
           - CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE: ContractCodeHistoryOperationTypeMigrate code migration
           - CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS: ContractCodeHistoryOperationTypeGenesis based on genesis data
        title: ContractCodeHistoryOperationType actions that caused a code change
      code_id:
        type: string
        format: uint64
        title: CodeID is the reference to the stored WASM code
      updated:
        description: Updated Tx position when the operation was executed.
        type: object
        properties:
          block_height:
            type: string
            format: uint64
            title: BlockHeight is the block the contract was created at
          tx_index:
            type: string
            format: uint64
            title: >-
              TxIndex is a monotonic counter within the block (actual
              transaction index,

              or gas consumed)
      msg:
        type: string
        format: byte
    description: ContractCodeHistoryEntry metadata to a contract.
  starnamed.x.wasm.v1beta1.ContractCodeHistoryOperationType:
    type: string
    enum:
      - CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED
      - CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT
      - CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE
      - CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS
    default: CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED
    description: >-
      - CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED:
      ContractCodeHistoryOperationTypeUnspecified placeholder for empty value
       - CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT: ContractCodeHistoryOperationTypeInit on chain contract instantiation
       - CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE: ContractCodeHistoryOperationTypeMigrate code migration
       - CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS: ContractCodeHistoryOperationTypeGenesis based on genesis data
    title: ContractCodeHistoryOperationType actions that caused a code change
  starnamed.x.wasm.v1beta1.ContractInfo:
    type: object
    properties:
      code_id:
        type: string
        format: uint64
        title: CodeID is the reference to the stored Wasm code
      creator:
        type: string
        title: Creator address who initially instantiated the contract
      admin:
        type: string
        title: Admin is an optional address that can execute migrations
      label:
        type: string
        description: Label is optional metadata to be stored with a contract instance.
      created:
        title: >-
          Created Tx position when the contract was instantiated.

          This data should kept internal and not be exposed via query results.
          Just

          use for sorting
        type: object
        properties:
          block_height:
            type: string
            format: uint64
            title: BlockHeight is the block the contract was created at
          tx_index:
            type: string
            format: uint64
            title: >-
              TxIndex is a monotonic counter within the block (actual
              transaction index,

              or gas consumed)
        description: >-
          AbsoluteTxPosition is a unique transaction position that allows for
          global

          ordering of transactions.
      ibc_port_id:
        type: string
      extension:
        type: object
        properties:
          type_url:
            type: string
            description: >-
              A URL/resource name that uniquely identifies the type of the
              serialized

              protocol buffer message. This string must contain at least

              one "/" character. The last segment of the URL's path must
              represent

              the fully qualified name of the type (as in

              `path/google.protobuf.Duration`). The name should be in a
              canonical form

              (e.g., leading "." is not accepted).


              In practice, teams usually precompile into the binary all types
              that they

              expect it to use in the context of Any. However, for URLs which
              use the

              scheme `http`, `https`, or no scheme, one can optionally set up a
              type

              server that maps type URLs to message definitions as follows:


              * If no scheme is provided, `https` is assumed.

              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                value in binary format, or produce an error.
              * Applications are allowed to cache lookup results based on the
                URL, or have them precompiled into a binary to avoid any
                lookup. Therefore, binary compatibility needs to be preserved
                on changes to types. (Use versioned type names to manage
                breaking changes.)

              Note: this functionality is not currently available in the
              official

              protobuf release, and it is not used for type URLs beginning with

              type.googleapis.com.


              Schemes other than `http`, `https` (or the empty scheme) might be

              used with implementation specific semantics.
          value:
            type: string
            format: byte
            description: >-
              Must be a valid serialized protocol buffer of the above specified
              type.
        description: >-
          `Any` contains an arbitrary serialized protocol buffer message along
          with a

          URL that describes the type of the serialized message.


          Protobuf library provides support to pack/unpack Any values in the
          form

          of utility functions or additional generated methods of the Any type.


          Example 1: Pack and unpack a message in C++.

              Foo foo = ...;
              Any any;
              any.PackFrom(foo);
              ...
              if (any.UnpackTo(&foo)) {
                ...
              }

          Example 2: Pack and unpack a message in Java.

              Foo foo = ...;
              Any any = Any.pack(foo);
              ...
              if (any.is(Foo.class)) {
                foo = any.unpack(Foo.class);
              }

           Example 3: Pack and unpack a message in Python.

              foo = Foo(...)
              any = Any()
              any.Pack(foo)
              ...
              if any.Is(Foo.DESCRIPTOR):
                any.Unpack(foo)
                ...

           Example 4: Pack and unpack a message in Go

               foo := &pb.Foo{...}
               any, err := ptypes.MarshalAny(foo)
               ...
               foo := &pb.Foo{}
               if err := ptypes.UnmarshalAny(any, foo); err != nil {
                 ...
               }

          The pack methods provided by protobuf library will by default use

          'type.googleapis.com/full.type.name' as the type URL and the unpack

          methods only use the fully qualified type name after the last '/'

          in the type URL, for example "foo.bar.com/x/y.z" will yield type

          name "y.z".



          JSON

          ====

          The JSON representation of an `Any` value uses the regular

          representation of the deserialized, embedded message, with an

          additional field `@type` which contains the type URL. Example:

              package google.profile;
              message Person {
                string first_name = 1;
                string last_name = 2;
              }

              {
                "@type": "type.googleapis.com/google.profile.Person",
                "firstName": <string>,
                "lastName": <string>
              }

          If the embedded message type is well-known and has a custom JSON

          representation, that representation will be embedded adding a field

          `value` which holds the custom JSON in addition to the `@type`

          field. Example (for message [google.protobuf.Duration][]):

              {
                "@type": "type.googleapis.com/google.protobuf.Duration",
                "value": "1.212s"
              }
    title: ContractInfo stores a WASM contract instance
  starnamed.x.wasm.v1beta1.Model:
    type: object
    properties:
      key:
        type: string
        format: byte
        title: hex-encode key to read it better (this is often ascii)
      value:
        type: string
        format: byte
        title: base64-encode raw value
    title: Model is a struct that holds a KV pair
  starnamed.x.wasm.v1beta1.QueryAllContractStateResponse:
    type: object
    properties:
      models:
        type: array
        items:
          type: object
          properties:
            key:
              type: string
              format: byte
              title: hex-encode key to read it better (this is often ascii)
            value:
              type: string
              format: byte
              title: base64-encode raw value
          title: Model is a struct that holds a KV pair
      pagination:
        description: pagination defines the pagination in the response.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    title: |-
      QueryAllContractStateResponse is the response type for the
      Query/AllContractState RPC method
  starnamed.x.wasm.v1beta1.QueryCodeResponse:
    type: object
    properties:
      code_info:
        type: object
        properties:
          code_id:
            type: string
            format: uint64
          creator:
            type: string
          data_hash:
            type: string
            format: byte
        title: CodeInfoResponse contains code meta data from CodeInfo
      data:
        type: string
        format: byte
    title: QueryCodeResponse is the response type for the Query/Code RPC method
  starnamed.x.wasm.v1beta1.QueryCodesResponse:
    type: object
    properties:
      code_infos:
        type: array
        items:
          type: object
          properties:
            code_id:
              type: string
              format: uint64
            creator:
              type: string
            data_hash:
              type: string
              format: byte
          title: CodeInfoResponse contains code meta data from CodeInfo
      pagination:
        description: pagination defines the pagination in the response.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    title: QueryCodesResponse is the response type for the Query/Codes RPC method
  starnamed.x.wasm.v1beta1.QueryContractHistoryResponse:
    type: object
    properties:
      entries:
        type: array
        items:
          type: object
          properties:
            operation:
              type: string
              enum:
                - CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED
                - CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT
                - CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE
                - CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS
              default: CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED
              description: >-
                - CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED:
                ContractCodeHistoryOperationTypeUnspecified placeholder for
                empty value
                 - CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT: ContractCodeHistoryOperationTypeInit on chain contract instantiation
                 - CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE: ContractCodeHistoryOperationTypeMigrate code migration
                 - CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS: ContractCodeHistoryOperationTypeGenesis based on genesis data
              title: >-
                ContractCodeHistoryOperationType actions that caused a code
                change
            code_id:
              type: string
              format: uint64
              title: CodeID is the reference to the stored WASM code
            updated:
              description: Updated Tx position when the operation was executed.
              type: object
              properties:
                block_height:
                  type: string
                  format: uint64
                  title: BlockHeight is the block the contract was created at
                tx_index:
                  type: string
                  format: uint64
                  title: >-
                    TxIndex is a monotonic counter within the block (actual
                    transaction index,

                    or gas consumed)
            msg:
              type: string
              format: byte
          description: ContractCodeHistoryEntry metadata to a contract.
      pagination:
        description: pagination defines the pagination in the response.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    title: |-
      QueryContractHistoryResponse is the response type for the
      Query/ContractHistory RPC method
  starnamed.x.wasm.v1beta1.QueryContractInfoResponse:
    type: object
    properties:
      address:
        type: string
        title: address is the address of the contract
      contract_info:
        type: object
        properties:
          code_id:
            type: string
            format: uint64
            title: CodeID is the reference to the stored Wasm code
          creator:
            type: string
            title: Creator address who initially instantiated the contract
          admin:
            type: string
            title: Admin is an optional address that can execute migrations
          label:
            type: string
            description: Label is optional metadata to be stored with a contract instance.
          created:
            title: >-
              Created Tx position when the contract was instantiated.

              This data should kept internal and not be exposed via query
              results. Just

              use for sorting
            type: object
            properties:
              block_height:
                type: string
                format: uint64
                title: BlockHeight is the block the contract was created at
              tx_index:
                type: string
                format: uint64
                title: >-
                  TxIndex is a monotonic counter within the block (actual
                  transaction index,

                  or gas consumed)
            description: >-
              AbsoluteTxPosition is a unique transaction position that allows
              for global

              ordering of transactions.
          ibc_port_id:
            type: string
          extension:
            type: object
            properties:
              type_url:
                type: string
                description: >-
                  A URL/resource name that uniquely identifies the type of the
                  serialized

                  protocol buffer message. This string must contain at least

                  one "/" character. The last segment of the URL's path must
                  represent

                  the fully qualified name of the type (as in

                  `path/google.protobuf.Duration`). The name should be in a
                  canonical form

                  (e.g., leading "." is not accepted).


                  In practice, teams usually precompile into the binary all
                  types that they

                  expect it to use in the context of Any. However, for URLs
                  which use the

                  scheme `http`, `https`, or no scheme, one can optionally set
                  up a type

                  server that maps type URLs to message definitions as follows:


                  * If no scheme is provided, `https` is assumed.

                  * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                    value in binary format, or produce an error.
                  * Applications are allowed to cache lookup results based on
                  the
                    URL, or have them precompiled into a binary to avoid any
                    lookup. Therefore, binary compatibility needs to be preserved
                    on changes to types. (Use versioned type names to manage
                    breaking changes.)

                  Note: this functionality is not currently available in the
                  official

                  protobuf release, and it is not used for type URLs beginning
                  with

                  type.googleapis.com.


                  Schemes other than `http`, `https` (or the empty scheme) might
                  be

                  used with implementation specific semantics.
              value:
                type: string
                format: byte
                description: >-
                  Must be a valid serialized protocol buffer of the above
                  specified type.
            description: >-
              `Any` contains an arbitrary serialized protocol buffer message
              along with a

              URL that describes the type of the serialized message.


              Protobuf library provides support to pack/unpack Any values in the
              form

              of utility functions or additional generated methods of the Any
              type.


              Example 1: Pack and unpack a message in C++.

                  Foo foo = ...;
                  Any any;
                  any.PackFrom(foo);
                  ...
                  if (any.UnpackTo(&foo)) {
                    ...
                  }

              Example 2: Pack and unpack a message in Java.

                  Foo foo = ...;
                  Any any = Any.pack(foo);
                  ...
                  if (any.is(Foo.class)) {
                    foo = any.unpack(Foo.class);
                  }

               Example 3: Pack and unpack a message in Python.

                  foo = Foo(...)
                  any = Any()
                  any.Pack(foo)
                  ...
                  if any.Is(Foo.DESCRIPTOR):
                    any.Unpack(foo)
                    ...

               Example 4: Pack and unpack a message in Go

                   foo := &pb.Foo{...}
                   any, err := ptypes.MarshalAny(foo)
                   ...
                   foo := &pb.Foo{}
                   if err := ptypes.UnmarshalAny(any, foo); err != nil {
                     ...
                   }

              The pack methods provided by protobuf library will by default use

              'type.googleapis.com/full.type.name' as the type URL and the
              unpack

              methods only use the fully qualified type name after the last '/'

              in the type URL, for example "foo.bar.com/x/y.z" will yield type

              name "y.z".



              JSON

              ====

              The JSON representation of an `Any` value uses the regular

              representation of the deserialized, embedded message, with an

              additional field `@type` which contains the type URL. Example:

                  package google.profile;
                  message Person {
                    string first_name = 1;
                    string last_name = 2;
                  }

                  {
                    "@type": "type.googleapis.com/google.profile.Person",
                    "firstName": <string>,
                    "lastName": <string>
                  }

              If the embedded message type is well-known and has a custom JSON

              representation, that representation will be embedded adding a
              field

              `value` which holds the custom JSON in addition to the `@type`

              field. Example (for message [google.protobuf.Duration][]):

                  {
                    "@type": "type.googleapis.com/google.protobuf.Duration",
                    "value": "1.212s"
                  }
        title: ContractInfo stores a WASM contract instance
    title: >-
      QueryContractInfoResponse is the response type for the Query/ContractInfo
      RPC

      method
  starnamed.x.wasm.v1beta1.QueryContractsByCodeResponse:
    type: object
    properties:
      contracts:
        type: array
        items:
          type: string
        title: contracts are a set of contract addresses
      pagination:
        description: pagination defines the pagination in the response.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    title: |-
      QueryContractsByCodeResponse is the response type for the
      Query/ContractsByCode RPC method
  starnamed.x.wasm.v1beta1.QueryRawContractStateResponse:
    type: object
    properties:
      data:
        type: string
        format: byte
        title: Data contains the raw store data
    title: |-
      QueryRawContractStateResponse is the response type for the
      Query/RawContractState RPC method
  starnamed.x.wasm.v1beta1.QuerySmartContractStateResponse:
    type: object
    properties:
      data:
        type: string
        format: byte
        title: Data contains the json data returned from the smart contract
    title: |-
      QuerySmartContractStateResponse is the response type for the
      Query/SmartContractState RPC method
